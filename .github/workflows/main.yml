name: CICD

on:
  push:
    branches: [ main ]

env:
  REGISTRY: "pixel68tmb"
  BOT_IMAGE: "telegram_bot"
  CONTAINER_NAME: "bot"


jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with: 
          go-version: 1.15
          
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Unit tests
        run: go test ./tests/

  build_and_push:
    runs-on: ubuntu-latest
    needs: tests
    
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Build docker image
        run: docker build -t $(echo $REGISTRY)/$(echo $BOT_IMAGE):$(echo $GITHUB_SHA | head -c7) .

      - name: Login to dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
      - name: Push docker image on DockerHub
        run: docker push $(echo $REGISTRY)/$(echo $BOT_IMAGE):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy on Yandex cloud
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.SSHKEY }}
          envs: BOT_IMAGE, REGISTRY, GITHUB_SHA, CONTAINER_NAME
          script: |
              # Stop runnig container
              docker stop $(echo $CONTAINER_NAME)
              # Remove old container
              docker rm $(echo $CONTAINER_NAME)
              # Set env variables
              export TELEGRAMTOKEN=${{ secrets.TELEGRAMTOKEN }}
              export POSTGRESQLURL=${{ secrets.POSTGRESQLURL}}
              # Run a new container from a new image
              docker run --restart always -idt \
              --log-driver=loki \
              --log-opt loki-url="http://localhost:3100/loki/api/v1/push" \
              --log-opt loki-retries=5 \
              --log-opt loki-batch-size=400 \
              --network="host" \
              --name $(echo $CONTAINER_NAME) -e TELEGRAMTOKEN,POSTGRESQLURL \
              $(echo $REGISTRY)/$(echo $BOT_IMAGE):$(echo $GITHUB_SHA | head -c7)
